<%
    var tasks = [
	'записати підряд всі символи, на які закінчуються всі непусті рядки у тексті',
	'записати підряд всі символи, на які починаються всі непусті рядки у тексті',
	'записати тільки ті непусті рядки, які не починаються на число і які містять пробільні символи в собі',
	'записати тільки ті непусті рядки, які не починаються на число і які не містять жодних пробільних символів в собі',
	'записати тільки ті непусті рядки, які починаються на число і які містять пробільні символи в собі',
	'для кожного рядка, який починається на ціле число (від\'ємні також враховувати), записати суму всіх цілих чисел у рядку',
	'для кожного рядка, який починається на ціле число (від\'ємні також враховувати), записати у рядок всі від\'ємні числа, розділяючи їх комами',
	'для кожного рядка, який починається на ціле число (від\'ємні також враховувати), записати у рядок всі додатні числа, розділяючи їх комами',
	'для кожного рядка, який починається на ціле число (від\'ємні також враховувати), записати у рядок всі числа у діапазоні [-30, 30], розділяючи їх комами',
	'для кожного рядка, який починається на ціле число (від\'ємні також враховувати), записати у рядок всі числа у діапазоні [-50, 50], розділяючи їх комами',
	'для кожного рядка, який починається на ціле число (від\'ємні також враховувати), записати у рядок всі парні числа, розділяючи їх комами',
	'для кожного рядка, який починається на ціле число (від\'ємні також враховувати), записати у рядок всі непарні числа, розділяючи їх комами',
	'записати у один рядок через кому всі числа, на які починаються непусті рядки у тексті (тільки для рядків, що починаються на числа)',
	'записати у один рядок через кому всі числа, на які закынчуються непусті рядки у тексті (тільки для рядків, що починаються на числа)',
	'записати ті рядки, які стоять одразу після кожного пустого рядку у тексті',
	'записати ті рядки, які стоять одразу перед кожним пустим рядком у тексті',
	'записати кількість непустих рядків, які не починаються на число і які містять пробільні символи в собі',
	'записати кількість непустих рядків, які не починаються на число і які не містять жодних пробільних символів в собі',
	'записати кількість непустих рядків, які починаються на число і які містять пробільні символи в собі',
	'для кожного рядка, який починається не на число і які містять пробільні символи, записати найкоротше слово у рядку ',
	'для кожного рядка, який починається не на число і які містять пробільні символи, записати найдовше слово у рядку',
	'для кожного рядка, який починається не на число і які містять пробільні символи, записати кількість слів у рядку',
];

    var taskIndex = parseInt($var) % tasks.length;
    var task = tasks[taskIndex];
%>

### Files Read And Write

Реалізувати функцію, що описана даним прототипом:

~~~~c
/*
 * @brief Processes readFileName file contents and writes the result into writeFileName file if it exists
 * @param readFileName - input file name
 * @param writeFileName - output file name
 * @returns status of function success 0 - success, 1 - error
 */
int file_process(const char * readFileName, const char * writeFileName);
~~~~

Функція першим аргументом приймає строку, що є назвою дискового файлу, у якому міститься декілька рядків тексту, файл захищений від запису.

Приклад вхідного файлу:
~~~~
MY first thought was, he lied in every word,	
-36   14   25    1   71   15  -83  -11   62  -37
EoHUkAnjo51jid2FG7hd
122
That hoary cripple, with malicious eye	
36   -5    8   30  -84  -91  -86  -20   35  -68
 
-30  -52   90   59  -54  -71
Askance to watch the working of his lie	
 88   87  -25   11    7   72   84  
 
-59   16   24   68   27  -42  -98   48  -69   
1KxPWhnmsdIX1STyMJVN
22  -45  -26   -4  -64   -28   65
 HavcAxOR7rIWuJLbogxq
On mine, and mouth scarce able to afford	
-31   49   13   33   98  -70   89    5  -75  -39
-17   37   -1  -55  -93  -62   
Suppression of the glee, that purs’d and scor’d	     
   
Its edge, at one more victim gain’d thereby.	
~~~~

Другий параметр приймає строку із назвою дискового файлу, у який потрібно записати відповідь.

Всередині функції потрібно зчитати всі рядки із вхідного файлу і записати у вихідний файл:

1. Завдання за варіантом (текст третього пункту)
1. Пустий рядок
1. <%= task %>.


Функція повинна повертати статус свого виконання:

`0` - якщо операція виконалась успішно

`1` - якщо сталася помилка (вхідного або вихідного файлу не існує, тощо)

Матеріали:

1. [Лекція 3. Стандартна бібліотека мови С. Робота із файлами в мові С. Робота із часовими типами даних [presentation]](https://docs.google.com/presentation/d/1fdtbAMbqdwGzmxjmXBZAXJGwgS7w32dpXZMmN1xrgGM/edit?usp=sharing)
1. [Лекція 3. Робота із файлами в мові С](https://docs.google.com/document/d/1PbAH9_Iwva7zG72Qds-iTyMhjMxTpgkBic-xTRa4LYE/edit?usp=sharing)