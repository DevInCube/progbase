<%
    var variant = parseInt($var);
    var groupnum = ($group && ($group.length > 1) && !isNaN(parseInt($group[1]))) ? parseInt($group[1]) : 0;
    var n0 = parseInt($var[1]);
    var n1 = parseInt($var[0]);
    
%>

## Робота з одномірними та багатомірними масивами. Рядки.

* [Завдання №1. Одномірний масив](#section-4)
* [Завдання №2. Два одномірні масиви](#section-5)
* [Завдання №3. Двомірний масив](#section-6)
* [Завдання №4. Обробка рядків мови С](#section-7)

#### Мета

Навчитися працювати зі статичними масивами різних типів даних мови програмування С. 

Застосувати на практиці різні види циклічних конструкцій при роботі з одномірними та багатомірними масивами даних.

Вдосконалити вміння роботи з рядками у мові С. 

Навчитися оформлювати консольну програму для зручності роботи користувача.


#### Загальні вимоги до завдання

Всі завдання реалізувати разом у одній консольній програмі. 

Після запуску програми користувач має можливість обрати завдання зі списку завдань і перейти у відповідний стан. 

Завжди виводити інформацію про стан, у якому знаходиться користувач та надати спеціальну команду (або клавішу) для виклику допомоги (help) по поточному стану.

Розділити консоль у стані на дві "зони": __зону відображення__ та __командну зону__. 

У зоні відображення виводити об'єкт з яким працюватиме користувач у відповідному стані (наприклад, масив або рядок (string)). При переході до кожного із станів одразу виводити об'єкт у зоні відображення.

У командній зоні дати користувачу можливість вводити команди та виводити результати їх виконання (наприклад, максимальне значення у масиві як результат відповідної команди).

Дати можливість користувачу за допомогою спеціальної команди (або нажаття спеціальної клавіші) перейти у початковий стан, у якому можна обрати інше завдання.

Весь ввід користувача перевіряти на валідність.

Можливі __додаткові бали__ за реалізацію підсвічування фону шуканих елементів, або елементів, що змінюються.


### Завдання №1. Одномірний масив

<%
    var task1Vars = [
        'Збільшити',
        'Зменшити',
        'Помножити'
    ];
    var task1_1 = task1Vars[variant % task1Vars.length];
%>

У цьому стані у користувача є одномірний масив цілих чисел (розміром `10` елементів) ініціалізований нулями.

Доступні операції над масивом:

1. Заповнити масив випадковими числами від `-100` до `100`.
1. Обнулити всі елементи масиву.
1. Знайти <%= ((n0 % 2 === 0) ? 'максимальний' : 'мінімальний') %> елемент та його індекс.
1. Знайти суму елементів масиву.
1. Вивести <%= ((n0 % 2 === 0) ? 'суму' : 'добуток') %> <%= ((variant % 2 === 0) ? 'додатніх' : 'від\'ємних') %> елементів масиву.
1. Знайти <%= ((n1 % 2 === 0) ? 'перший елемент, що повторюється найбільшу кількість раз' : 'перший унікальний символ') %>.
1. Поміняти місцями максимальний і мінімальний елементи масиву.
1. <%= task1_1 %> всі елементи масиву на введене число.


### Завдання №2. Два одномірні масиви

<%
    var task2Vars = [
        'сумою',
        'різницею',
        'добутком',
        'відношенням'
    ];
    var task2_1 = task2Vars[variant % task2Vars.length];
%>

У цьому стані у користувача є 2 одномірних масива дробових чисел (розміром `10`) ініціалізованих нулями.

Доступні операції над масивами:

1. Заповнити масиви випадковими дробовими числами від `-20.0` до `20.0`.
1. Обнулити всі елементи масивів.
1. Знайти значення нового масиву чисел, елементи якого будуть <%= task2_1 %> відповідних елементів першого і другого масиву.
1. Вивести номер масиву, у якому <%= ((n1 % 2 === 0) ? 'максимальна' : 'мінімальна') %> сума елементів.
1. Поміняти місцями <%= ((n0 % 2 === 0) ? 'максимальний' : 'мінімальний') %> елемент першого масиву і <%= ((n0 % 2 === 0) ? 'мінімальний' : 'максимальний') %> елемент другого масиву.


### Завдання №3. Двомірний масив

У цьому стані у користувача є двомірний масив цілих чисел (розміром `8х8`) ініціалізований нулями.

Доступні операції над матрицею:

1. Заповнити масив випадковими числами від `-10` до `10`.
1. Обнулити всі елементи масиву.
1. Знайти <%= ((n0 % 2 === 0) ? 'мінімальний' : 'максимальний') %> елемент та його індекси.
1. Знайти суму <%= ((n0 % 2 === 0) ? 'головної' : 'побічної') %> діагоналі масиву.
1. Знайти суму <%= ((variant % 2 === 0) ? 'рядка' : 'стовпця') %> за заданим індексом.
1. Поміняти місцями максимальний і мінімальний елементи масиву.
1. Змінити значення елементу за вказаними індексами на задане.


### Завдання №4. Обробка рядків мови С

У цьому стані у користувача є буфер (розміром `80` символів) для зберігання строки. У початковому стані буфер повинен містити будь-яку видиму строку.

Доступні операції над рядком:

1. Заповнити строку вводом із консолі.
1. Очистити строку.
1. Вивести довжину строки.
1. Вивести підстроку із заданої позиції і заданої довжини.
1. Вивести список підстрок, розділених заданим символом.
1. Вивести <%= ((variant % 2 === 0) ? 'найдовше' : 'найкоротше') %> слово (слова - непуста послідовність буквенних символів).
1. Знайти та вивести всі <%= ((n0 % 2 === 0) ? 'цілі' : 'дробові') %> числа, що містяться у строці.
1. Знайти та вивести <%= ((variant % 2 === 0) ? 'суму' : 'добуток') %> всіх <%= ((n0 % 2 === 0) ? 'дробових' : 'цілих') %> чисел, що містяться у строці.


Матеріали:

1. [Лекція 3. Масиви](https://docs.google.com/document/d/180QGY8Ffg22r0VIGwmkB9_XSsf3rLLvLG3YsEh8a2qQ/edit?usp=sharing)
2. [Лекція 4. Символи і строки](https://docs.google.com/document/d/1XTXErCCiWfwdkxrRGqSvir0XExS37M1b1iVlgqes550/edit?usp=sharing)
