<%
    var variant = parseInt($var);
    var groupnum = ($group && ($group.length > 1) && !isNaN(parseInt($group[1]))) ? parseInt($group[1]) : 0;
    var n0 = parseInt($var[1]);
    var n1 = parseInt($var[0]);
    
    var task1a1 = [
        '' + n0 + ' \\times y + \\frac{z}{x}',
        '\\frac{y}{' + (n0 + 1) + '\\times|x+y|}'
    ];
    
    var task1a2 = [
        '(x+' + n1 + ')^\\frac{1}{|sin(y)|}',
        '\\sqrt{|\\frac{cos(y)}{sin(x)}+' + n1 + '|}',
        '(' + n1 + '+sin(y))^{cos(x)/z+|x-y|}'
    ];
    
    
    var task3 = [
    	'$\\Large{\\frac {' + (n0 + 3) + '\\times\\pi\\times\\cos(' + (n1 + 2) + '\\times a \\times b)}{a}}$',
    	'$\\Large{\\frac {\\pi\\times(a + b) \\bmod '+ (n0 + n1 + 1) + '}{b}}$',
    	'$\\Large{\\frac{a^{' + n0 + ' + b}}{' + n1 + ' + \\pi}}$',
    	'$\\Large{\\frac{\\tan(a\\times\\pi)}{' + n0 + ' - b \\times ' + (n1 + 1) + '}}$',
    	'$\\Large{\\frac{' + (n0 - 1) + '\\times\\cos(b\\times\\pi)}{a - ' + n1 + '}}$',
    ];
    
    var task4 = [
    	'$\\Large{x=\\sum\\limits_{i=1}^n(i\\times\\sum\\limits_{j=1}^{m}(' + n1 + '+\\frac{1}{j+' + n1 + '}))}$',
        '$\\Large{x=\\sum\\limits_{i=1}^n\\sum\\limits_{j=1}^m(\\frac{' + (n1 + 1) + '}{i+j} + i \\times (j-' + n1 + '))}$',
        '$\\Large{x=\\sum\\limits_{i=1}^n(\\cos(\\frac{\\pi}{i})\\times\\sum\\limits_{j=1}^{m}\\frac{i}{j+' + n1 + '})}$ ',
        '$\\Large{x=\\sum\\limits_{i=1}^n\\sum\\limits_{j=1}^{m}(i^2 + (' + (n1 + 9) + ')/j)}$',
        '$\\Large{x=\\sum\\limits_{i=1}^n\\sum\\limits_{j=1}^{m}(\\sqrt{i+j\\times(' + (n1 + 2) + ')})}$',
        '$\\Large{x=\\sum\\limits_{i=1}^n(\\sin(\\frac{2\\pi}{i+' + n1 + '})\\times\\cos(\\sum\\limits_{j=1}^{m}j^2))}$',
        '$\\Large{x=\\sum\\limits_{i=1}^n\\sum\\limits_{j=1}^{m}(' + n1 + ' + \\frac{i}{(2+\\frac{' + n1 + '}{10})^j})}$ ',
        '$\\Large{x=\\sum\\limits_{i=1}^n((' + n1 + '+i)\\times\\sum\\limits_{j=1}^{m}\\cos\\frac{j\\times\\pi}{2})}$',
        '$\\Large{x=\\sum\\limits_{i=1}^n(\\sin(\\frac{2\\pi}{i})\\times(\\sum\\limits_{j=1}^{m}j^{' + n1 + '+i})^\\frac{1}{2})}$',
        '$\\Large{x=\\sum\\limits_{i=1}^n\\sum\\limits_{j=1}^{m}(\\cos\\frac{i\\times\\pi}{2}+(' + (n1 + 1) + ')\\times\\sin\\frac{j\\times\\pi}{4})}$'
    ];
    
    var a1 = 'a_1 = ' + (task1a1[n0 % task1a1.length]);
    var a2 = 'a_2 = ' + (task1a2[n1 % task1a2.length]);
    
    var task2_1 = 'Результат: True якщо модуль sum2 більший за modmin і значення sum2 більше -256;';
    if (n1 % 3 === 1) task2_1 = 'Результат: True якщо різниця модуля sum2 і modmin менша 16 або модуль sum2 менше 16;';
    if (n1 % 3 === 2) task2_1 = 'Результат: True якщо модуль sum2 більше 16 або modmin більше 8;';
    
    var task2_2 = 'Результат: чи max - min більше 32;';
    if (n0 % 5 === 1) task2_2 = 'Результат: чи max + min менше 256;';
    if (n0 % 5 === 2) task2_2 = 'Результат: чи max * min менше 256;';
    if (n0 % 5 === 3) task2_2 = 'Результат: чи max ділиться на min без остачі (якщо min == 0, то результат False, якщо max == 0 і min != 0 то True)';
    if (n0 % 5 === 4) task2_2 = 'Результат: чи max в степені min можна зберегти у змінну short int;';
    
    var task3_1 = '$\\large{var(a, b) = }$ ' + task3[ (n0 + n1) % task3.length];
    var task3_2 = '$\\large{def(a, b) = (op \\bmod \\|a+1\\|) + (op \\bmod \\|b+1\\|) }$';
%>

## Обчислення математичних формул. Використання конструкцій розгалуження та циклів.

* [Завдання №1. Реалізація математичних операцій](#section-3)
* [Завдання №2. Умовні конструкції](#section-4)
* [Завдання №3. Конструкції розгалуження](#section-5)
* [Завдання №4. Використання циклічних конструкцій](#section-6)

#### Мета

Навчитися на практиці проводити точні обчислення математичних формул за допомогою операторів та функцій мови програмування С. 

Застосувати теоретичні знання для створення програмного забезпечення для прийняття рішень на основі вхідних даних за допомогою умовних конструкцій та конструкцій розгалуження. 

Застосувати на практиці різні види циклічних конструкцій для обчислення математичних формул. 

Навчитися виконувати компіляцію та базове тестування власного коду за допомогою компілятора мови С та спеціалізованої IDE.  

### Завдання №1. Реалізація математичних операцій

Виконати розрахунки за заданими формулами.

$\Large{ a = a_0 + a_1 + a_2,}$

де 
$\Large{a_0 = \frac{x^{y+1}}{(x-y)^{\frac{1}{z}}},}$
$\Large{<%= a1 %>,}$ 
$\Large{<%= a2 %>}$

$\large{x, y, z}$ - довільні дробові числа, які користувач вводить із консолі на початку роботи програми.

Необхідна точність обчислень $\large{ {10}^{-10} }$.

У випадку неіснування відповіді виводити відповідне повідомлення у консоль.


### Завдання №2. Умовні конструкції

Користувач вводить 3 цілочисельні значення $\large{a}$, $\large{b}$ i $\large{c}$.

На основі вхідних даних і заданих умов за допомогою умовних конструкцій (`if...else`) визначити істинність результату і вивести його у консоль.

~~~~
Якщо всі введені числа a, b та c від’ємні, то:
    Знайти значення modmin: модуль найменшого числа;
    Знайти значення sum2: суму двох інших чисел;
    Якщо sum2 більша -256, а modmin є степенню двійки, то:
        Результат: True
    Інакше:
        <%= task2_1 %>
Якщо серед введених чисел є і від’ємні і додатні (або 0), то:
    Якщо тільки одне з них від’ємне, то:
        Результат: чи це від’ємне число більше -256;
    Якщо два від’ємних числа, то
        Результат: чи сума цих двох від’ємних чисел помножена на <%= (n0 + n1) %> більша за -256;
Якщо всі числа додатні (або 0) то:
    Знайти значення max: максимальне з цих чисел;
    Знайти значення min: мінімальне з цих чисел;
    <%= task2_2 %>
~~~~

У деяких пунктах результатом буде відповідь на питання представлена булевими значеннями. 

Наприклад:

"Результат: чи це від’ємне число більше -256"?:

* "- Так" - це значення `True`
* "- Ні" - це значення `False`.


### Завдання №3. Конструкції розгалуження

У таблиці 1 задано коди операцій, відповідні операції та їх детальний опис. 

Користувач вводить код операції (значення $\large{op}$) та два цілочисленних значення $\large{a}$ i $\large{b}$. 

Якщо значення коду $\large{op}$ від’ємне - міняти місцями значення $\large{a}$ i $\large{b}$, а $\large{op}$ змінити на додатнє.

Використовуючи конструкції розгалуження (`switch`) обчислити та вивести результат відповідної операції. 

Якщо значення обчислити неможливо - виводити про це повідомлення у консоль.

_Таблиця 1. Коди операцій_

| Код                       | Операція                                    | Опис                                                
|---------------------------|---------------------------------------------|-----------------------------------------------------
| 0                         | `a + b`                                     | сума                                      	        
| 1                         | `a - b`                                     | бінарний мінус                            			
| 2                         | `a * b`                                     | добуток                                             
| 3                         | `a / b`                                     | цілочисельне ділення                      			
| 4                         | `abs(a)`                                    | $\large{\|a\|}$. $b$ ігнорується                  	    
| 5                         | `min(a, b)`                                 | мінімальне з чисел $a$ і $b$                         
| 6                         | `max(a, b)`                                 | максимальне з чисел $a$ і $b$                        
| 7, 13                     | `pow(a, b)`                                 | $\large{a^b}$           						
| 8                         | `var(a, b)`                                 | <%= task3_1 %>						                
| ?                         | `def(a,b)`                                  | <%= task3_2 %>


### Завдання №4. Використання циклічних конструкцій

Користувач вводить 2 додатні цілочисельні значення $\large{n}$ i $\large{m}$.

За допомогою ітераційних циклічних конструкцій (`for`) обчислити значення $\large{x}$ та вивести його консоль:

<%= task4[variant % task4.length] %>
