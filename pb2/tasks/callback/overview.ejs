<%
  var tasks = [
    `масиву слів у порядку зростання їх довжини`,
    `масиву слів у порядку спадання їх довжини`,
    `масиву слів у порядку зростання кількості голосних букв`,
    `масиву слів у порядку спадання кількості голосних букв`,
    `масиву слів у порядку зростання кількості приголосних букв`,
    `масиву слів у порядку спадання кількості приголосних букв`,
    `масиву чисел у порядку зростання першої цифри`,
    `масиву чисел у порядку спадання першої цифри`,
    `масиву чисел у порядку зростання останньої цифри`,
    `масиву чисел у порядку спадання останньої цифри`,
    `масиву чисел у порядку зростання кількості цифр числа`,
    `масиву чисел у порядку спадання кількості цифр числа`
  ];
  
  var tasks2 = [
    [`Студент`, `у порядку спадання середнього балу`],
    [`Студент`, `за прізвищем у алфавітному порядку`],
    [`Викладач`, `у порядку зростання кількості пар на тиждень`],
    [`Викладач`, `за прізвищем у алфавітному порядку`],
    [`Стартап`, `у порядку спадання кількісті інвестицій`],
    [`Стартап`, `у порядку зростання кількісті залучених інвесторів`],
    [`Учасник турніру`, `у порядку спадання кількісті набраних балів`],
    [`Учасник турніру`, `у порядку зростання кількісті штрафних балів`],
    [`Гравець`, `у порядку спадання кількісті набраних балів у грі`],
    [`Гравець`, `у порядку зростання кількісті пройдених рівнів у грі`],
  ];
  
  var tasks3 = [
    `елементів на парних позиціях`,
    `елементів на непарних позиціях`,
    `елементів із парними значеннями`,
    `елементів із непарними значеннями`,
    `додатніх елементів`,
    `від'ємних елементів`,
    `додатніх елементів із парними значеннями`,
    `від'ємних елементів із парними значеннями`,
    `додатніх елементів із непарними значеннями`,
    `від'ємних елементів із непарними значеннями`
  ];
  
  var task = tasks[parseInt($var) % tasks.length];
  var task2 = tasks2[(parseInt($var) + 7) % tasks2.length];
  var task3 = tasks3[(parseInt($var) + 5) % tasks3.length];
%>

### Callback Functions

#### Пункт 1. Сортування простих типів

Використовуючи стандартну функцію `qsort()` і callback-функції, виконати сортування <%= task %>.

Вивести у консоль вхідні дані, умову завдання і відсортовані дані.

#### Пункт 2. Сортування складених типів

Описати структуру `<%= task2[0] %>` і за допомогою `qsort()`, виконати сортування масиву елементів `<%= task2[0] %>` <%= task2[1] %>.

Вивести у консоль вхідні дані, умову завдання і відсортовані дані.

#### Пункт 3. Створення функцій, що приймають callback

Створити функцію:

```
void Array_foreach(int arr[], int len, void (*action)(int, int));
```

яка проходиться по масиву `arr` у прямому порядку і для кожного значення викликає callback-функцію `action` 
із двома аргументами: поточне значення у масиві та індекс поточного елемента масиву. 

Створити функцію:

```
void Array_foreachReversed(int arr[], int len, void (*action)(int, int));
```

яка проходиться по масиву `arr` у зворотньому порядку і для кожного значення викликає callback-функцію `action` 
із двома аргументами: поточне значення у масиві та індекс поточного елемента масиву. 

У функції `main()` створити і вивести тестовий масив цілих чисел та 
викликати функції `Array_foreach()` та `Array_foreachReversed` на тестовому масиві чисел 
із callback-функціями, що виводять у консоль індекс і значення <%= task3 %>.

Матеріали:

1. [Лекція. Callback-функції][lec-callback]
1. [quit()][https://linux.die.net/man/3/qsort]

  [lec-callback]: https://docs.google.com/document/d/1-8yfw06Md6pHm1v3GLgtbLiEcrmRAOZh3etQ_YKV-zU/edit?usp=sharing


