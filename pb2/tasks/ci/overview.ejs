<%
  var tasks = [
    `Отримання списку N студентів викладача, що мають найбільшу кількість балів.`,
    `Отримання списку N студентів викладача, що мають найменшу кількість балів.`,
    `Функція, що приймає викладача і список студентів і в результаті створює новий список, у який заносяться студенти із вхідного списку, що прив'язані до даного викладача.`,
    `Функція, що приймає викладача і список студентів і в результаті створює новий список, у який заносяться студенти із вхідного списку, що не прив'язані до даного викладача.`,
    `Функція, що приймає двох викладачів і в результаті створює список зі студентами, що прив'язані до обох викладачів.`,
    `Функція, що приймає двох викладачів і в результаті створює список зі студентами, що прив'язані першого викладача, але не значаться у списку другого.`,
    `Функція, що приймає двох викладачів і в результаті створює список зі студентами, що прив'язані другого викладача, але не значаться у списку першого.`,
    `Функція, що приймає двох викладачів і в результаті створює список із N студентів обох викладачів, у яких найбільше балів.`,
    `Функція, що приймає двох викладачів і в результаті створює список із N студентів обох викладачів, у яких найменше балів.`
  ];
  
  var task = tasks[parseInt($var) % tasks.length];
%>

### [Extra] Continuous Integration

#### Завдання 1. Статична бібліотека та модульні тести

Створити модуль для організації університетських даних, що містить типи:

* Студент
* Викладач
* Список

та функції:

* Формування списку студентів із CSV строки.
* Формування CSV строки із списку студентів.
* Прикріплення списку студентів до викладача.
* <%= task %>

Описати модульні тести (на основі фреймворку Check) для перевірки коректності роботи описаних функцій.

Оформити модуль у вигляді статичної бібліотеки і опублікувати код у GitHub репозиторії.

#### Завдання 2. Налаштування безперервної інтеграції за допомогою Travis CI

Конфігурація [Travis CI][ci] (файл `.travis.yml`) повинна:

1. Збирати статичну бібліотеку і тестову програму та запускати тестову програму із описаними модульними тестами (`Success || Failure`).
1. Визначати процент покриття коду тестами (`0-100%`).

Для цього потрібно спочатку 

Для визначення проценту покриття коду тестами потрібно:

1. Додати у налаштування `.travis.yml` додати встановлення бібліотеки __check__ та __lcov__:

    ```
    before_install:
      - sudo apt-get install check lcov
    ```
  
1. Додати файл [`CodeCoverage.cmake`][codecov-module] 
до директорії `scripts/cmake/` проекту
1. Включити опцію тестування і додати конфігурації тестування у файлі `CMakeLists.txt` 
(після налаштування збірки тестової програми, повний файл налаштування [тут][cmakelists]):

	```
	#
	# Create make test
	#
	enable_testing()
	add_test(unit-tests ${CMAKE_PROJECT_NAME})

	## Coverage
	set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/scripts/cmake)
	include(CodeCoverage)
	setup_target_for_coverage(${CMAKE_PROJECT_NAME}_coverage ${CMAKE_PROJECT_NAME} coverage)
	SET(CMAKE_CXX_FLAGS "-g -O0 -fprofile-arcs -ftest-coverage")
	SET(CMAKE_C_FLAGS "-g -O0 -fprofile-arcs -ftest-coverage")
	```

У `README.md` репозиторію додати:

* бейдж Travis-CI зі статусом збірки бібліотеки: [![Build Status](https://travis-ci.org/PublicHadyniak/travis-ci-sample.svg?branch=master)](https://travis-ci.org/PublicHadyniak/travis-ci-sample)
* бейдж [Codecov][codecov] для відображення міри покриття коду тестами: ![codecov-badge](https://codecov.io/gh/PublicHadyniak/Travis-ci-sample/branch/master/graph/badge.svg)

Репозиторій з прикладом: [travis-ci-sample](https://github.com/PublicHadyniak/travis-ci-sample)

У папку завдання навчального репозиторія додати файл `link.txt` із посиланням на репозиторій GitHub.


Матеріали:

1. [Лекція  3.  Обробка помилок. Модульне тестування. Continuous Integration][test-ci]

  [test-ci]: https://docs.google.com/document/d/1bBVm38PPY8b5iEE15Q0qFIJFusyhZzg25VdDczF9Ciw/edit?usp=sharing
  [ci]: https://docs.google.com/document/d/1bBVm38PPY8b5iEE15Q0qFIJFusyhZzg25VdDczF9Ciw/edit#heading=h.t0y1w99ac5hl
  [ci-sample]: https://github.com/PublicHadyniak/libprogbase/
  [codecov]: https://codecov.io/
  [cov-sample]: https://github.com/ReactiveX/RxJava
  [ci-apt]: https://docs.travis-ci.com/user/customizing-the-build/#Installing-Packages-Using-apt
  [codecov-module]: https://github.com/bilke/cmake-modules/blob/master/CodeCoverage.cmake
  [cmakelists]: https://github.com/PublicHadyniak/travis-ci-sample/blob/master/CMakeLists.txt

