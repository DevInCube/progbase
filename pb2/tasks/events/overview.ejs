<%
  var tasks = [
    `Нажаття на кнопку [Enter] стартує таймер на 5 секунд. Нажаття пробілу може призупинити/відновити відлік таймеру. Кнопка [Esc] відміняє таймер.`,
    `Нажаття на кнопку [Space] стартує\призупиняє відлік часу в секундах. Якщо час перетинає 5 секунд - зупинити відлік і згенерувати повідомлення, що відображає певне повідомлення у консолі. Кнопка [R] обнуляє лічильник часу`,
    `Створити хендлер, що містить список довільних строк і індекс поточної строки для відображення. Нажаття на кнопку [S] збільшує індекс поточної строки, на [W] зменшує індекс. При зміні індексу у консоль виводиться поточна строка.`,
    `Створити хендлер, що може перебувати в одному з двох станів: отримання вводу строки і відображення введеної строки. При нажатті на [Enter] хендлер переключається між цими станами. У стані вводу попередньо введена строка очищується, а всі нажаття на кнопки символів заносяться в нову строку, у стані відображення - введена строка відображається.`
  ];
  var task = tasks[parseInt($var) % tasks.length];
%>

### Event-Driven Programming

На основі [реалізації системи подій][event-system-src] реалізувати подійно-орієнтовану програму за варіантом: <%= task %>. 

Забороняється використання глобальних та статичних змінних.

  [event-system-src]: https://github.com/PublicHadyniak/progbase-samples/tree/master/practices/eventloop
