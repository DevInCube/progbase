<%
    var variant = parseInt($var);
    var groupnum = ($group && ($group.length > 1) && !isNaN(parseInt($group[1]))) ? parseInt($group[1]) : 0;
    var n0 = parseInt($var[1]);
    var n1 = parseInt($var[0]);
    
    var tasks1 = [
        ['Музична композиція', 'Знайти і вивести К найдовших композицій'],
        ['Кінофільм', 'Знайти К фільмів із найбільшим рейтингом '],
        ['Викладач', 'Знайти К викладачів із найбільшим стажем роботи'],
        ['Мобільний оператор', 'Знайти К операторів із найдешевшими тарифами'],
        ['Інтернет-провайдер', 'Знайти К провайдерів із найдорожчим тарифом на інтернет'],
        ['Веб-сайт', 'Знайти всі сайти із доменом .com'],
        ['Соціальна мережа', 'Знайти всі соціальні мережі, у яких кількість користувачів більше К'],
        ['Онлайн-магазин', 'Знайти всі онлайн магазини, у яких прибуток за останній рік менше К грн'],
        ['Тур-оператор', 'Знайти всіх тур-операторів, що пропонують відпочинок у країні Х'],
        ['Організація', 'Знайти всі організації із країни Х'],
        ['Станція метро', 'Знайти всі станції метро, що відкриваються раніше часу Х'],
        ['Столиця країни', 'Знайти всі столиці, у яких довгота більша за Х'],
        ['Музей мистецтв', 'Знайти всі музеї в місті Х'],
        ['Кіноактор', 'Знайти всіх акторів, що знімалися більше ніж у Х фільмах'],
        ['Композитор', 'Знайти всіх композиторів, що створили більше Х композицій'],
        ['Динозавр', 'Знайти всіх динозаврів із середньою масою тіла меншою за Х кг'],
        ['Планета', 'Знайти всі планети із кількістю супутників меншою за Х'],
        ['Курс лекцій', 'Знайти всі курси лекцій, у яких загальна тривалість більша Х годин'],
        ['Пост у соцмережі', 'Знайти всі пости, у яких кількість репостів більша Х'],
        ['Фото у соцмережі', 'Знайти всі фото, у яких кількість лайків менша Х'],
        ['Користувач соцмережі', 'Знайти всіх користувачів, у яких кількість друзів більша за Х'],
        ['Книга', 'Знайти книги, у яких кількість персонажів менша за Х'],
        ['Письменник', 'Знайти всіх письменників, що народились до року Х'],
        ['Винахідник', 'Знайти всіх винахідників, у яких більше К патентів'],
        ['Місто', 'Знайти всі міста країни Х'],
        ['Країна', 'Знайти всі країни північної півкулі'],
        ['Мова програмування', 'Знайти всі мови програмування створені до року Х'],
        ['Університет', 'Знайти всі університети країни Х'],
        ['Кінотеатр Києва', 'Знайти всі кінотеатри району Х міста Київ'],
        ['Комп\'ютерна гра', 'Знайти всі ігри із рейтингом меншим за Х'],
        ['Професія', 'Знайти всі професії із середньою зарплатою, більшою з Х'],
    ];
    var task1 = tasks1[variant % tasks1.length][0];
    var task2 = tasks1[variant % tasks1.length][1];
%>

## Модульне програмування, динамічні структури даних

#### Мета:

Навчитися створювати і використовувати динамічні структури даних.
Навчитися розбивати програмний код на модулі і перевіряти їх роботу за допомогою модульних тестів.

#### Необхідні знання

* Теорія абстракції і принцип інкапсуляції.
* Створення і використання власних заголовочних файлів __.h__
* Вміння розміщувати код програми у декількох __.c__ файлах і компілювати його. Принцип роботи лінкера.
* Прототипи функцій та функції.
* Структури та вказівники на структури. Розуміння  __typedef__.
* Динамічне виділення пам’яті за допомогою __malloc()__ та очищення пам’яті із __free()__.
* Створення динамічних структур даних.

#### Постановка завдання на розробку програми:

_(Модифіковане завдання із лабораторної роботи №3)_

Реалізувати консольну програму для управління даними типу __<%= task1 %>__. 
Після входу у програму користувач має можливість:

* Створити новий __список_ елементів типу __<%= task1 %>__.
* Зчитати __список__ елементів типу __<%= task1 %>__ із дискового файлу.
* Зберегти змінений список елементів на файлову систему, 
запропонувавши йому ввести назву дискового файлу, у який збережуться дані у довільному фрматі.

Після цього __список__ можна модифікувати:
* Додати новий елемент на довільну позицію.
* Видалити елемент із вказаної позиції.
* Обрати довільний елемент і замітини всі, чи тільки деякі значення його полів на нові.
* <%= task2 %>

#### Завдання №1. Створення динамічної структури даних __Список__

Потрібно створити список елементів типу за варіантом і замінити всі випадки використання масиву даних із ЛР№3 на список даних.
Описати всі необхідні типи і функції типу і організувати їх у окремий модуль __Список__.

#### Завдання №2. Виділення модулів

Розбити всю кодову базу програми на модулі:

1. Список даних
1. Модуль конвертації даних
1. Сховище даних (файлова система)
1. Консольний інтерфейс користувача (CUI)

#### Завдання №3. Модульні тести

За фопомогою фреймворку [Check][chack] (або аналогічного) описати модульні тести для тестування модуля конвертації даних.

Матеріали:

1. [Лекція 5. Структури даних](https://docs.google.com/document/d/1lVKhSLSnSCNLz8c6AYkQDqGq9JvFadk8i1uYc2RWKLU/edit?usp=sharing)
1. [Лекція 6. Функція](https://docs.google.com/document/d/1taRudyWhXwB_LcsSylt-ujQ_ocat3FcN2rJy-RPVLHU/edit?usp=sharing)
1. [Лекція 1. Вказівники](https://docs.google.com/document/d/1GxvGRqBOryZ9Vvip5BQM1wKf0oDmexYuVexh8ALL2Wk/edit?usp=sharing)
1. [Лекція 2. Динамічне виділення пам'яті](https://docs.google.com/document/d/1ovwOnHQ65NE8qaKG_iOgvoQUhxxGsNTxgDAqo26vxS0/edit?usp=sharing)
1. [Лекція 3. Робота із файлами в мові С](https://docs.google.com/document/d/1PbAH9_Iwva7zG72Qds-iTyMhjMxTpgkBic-xTRa4LYE/edit?usp=sharing)

[check]: https://libcheck.github.io/check/
