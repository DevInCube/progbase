## Тема
Інтеграція веб-сервера із базами даних.

## Мета
Навчитися працювати із базами даних через веб-сервер.

## Додаткова інформація 

__Пагінація__ (від англ. _page_) - показ обмеженої частини інформації на одній веб-сторінці (наприклад, 10 результатів пошуку). 
Використовується в веб-додатках для розбиття великого масиву даних на сторінки і включає в себе навігаційний блок для переходу 
на інші сторінки.

Тобто, якщо у клієнтській частині є обмеження на показ 5 об'єктів на одну сторінку, а у базі даних міститься 16 об'єктів, 
то показ всіх об'єктів буде розбитим на 4 сторінки по 5 об'єктів. 

Для того, щоби користувач міг перключатися між сторінками, йому потрібно надати 2 посилання: на попередню сторінку 
(якщо це не 1-ша сторінка) і на наступну сторінку (якщо це не остання сторінка). Також важливим є відображення номеру поточної сторінки і загальної кількості сторінок.

Для того, щоби реалізувати пагінацію, можна у аргументи URL сторінки відображення списку об'єктів додати параметр `?page=2`, 
який визначатиме, який підсписок об'єктів потрібно відобразити на даній сторінці (наприклад, записи з бази від 6-го до 10-го).

## Завдання

1. Обрати реляційну або NoSQL базу даних та помістити у неї дані із JSON-файлу ЛР№3.
1. У серверній частині ЛР№3 замінити сховище об’єктів із дискового файлу і списку у оперативній пам’яті 
на взаємодію зі створеною базою даних.
1. У серверній частині додати JSON REST API для створення, модифікації, отримання (із фільтрацією) і видалення об’єктів.
1. У клієнтській частині додати пагінацію списку об’єктів.

## Демонстрація

* Запустити сервер та продемонструвати його роботу за допомогою веб-браузера.
* Підтвердити, що дані, що відображаються у браузері, беруться із бази даних.
* Продемонструвати роботу REST API через утиліту [cUrl](https://www.google.com/url?q=https://curl.haxx.se/&sa=D&ust=1476659248416000&usg=AFQjCNG-v6YoejBkxyFVggJrPJ3hG4uCQw) та підтвердити відповідні зміни у базі даних.

## Вимоги до документації

* Опис структури бази даних у вигляді таблиць або JSON-документів (в залежності від типу бази даних)
* REST документація.
